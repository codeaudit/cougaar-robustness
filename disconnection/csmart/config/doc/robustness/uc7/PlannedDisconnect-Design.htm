<!-- saved from url=(0022)http://internet.e-mail -->
<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./PlannedDisconnect-Design_files/filelist.xml">
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>OBJS</o:Author>
  <o:LastAuthor>OBJS</o:LastAuthor>
  <o:Revision>9</o:Revision>
  <o:TotalTime>172</o:TotalTime>
  <o:Created>2003-04-11T19:29:00Z</o:Created>
  <o:LastSaved>2003-04-14T12:21:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>1223</o:Words>
  <o:Characters>6975</o:Characters>
  <o:Company>Dell Computer Corporation</o:Company>
  <o:Lines>58</o:Lines>
  <o:Paragraphs>13</o:Paragraphs>
  <o:CharactersWithSpaces>8565</o:CharactersWithSpaces>
  <o:Version>9.3821</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>70</w:Zoom>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:Arial;
	mso-font-kerning:16.0pt;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	text-align:center;
	mso-pagination:widow-orphan;
	mso-outline-level:2;
	font-size:12.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:207300568;
	mso-list-type:hybrid;
	mso-list-template-ids:-1563396936 -1 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l0:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l1
	{mso-list-id:349576130;
	mso-list-type:hybrid;
	mso-list-template-ids:348922020 -1 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l2
	{mso-list-id:671686744;
	mso-list-type:hybrid;
	mso-list-template-ids:182254052 -1 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l2:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l3
	{mso-list-id:1631550213;
	mso-list-type:hybrid;
	mso-list-template-ids:2097455792 -1 67698691 67698693 67698689 67698691 67698693 67698689 67698691 67698693;}
@list l3:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:.25in;
	mso-level-number-position:left;
	margin-left:.25in;
	text-indent:-.25in;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<h1 align=center style='text-align:center'>Planned Disconnect Defense</h1>

<h1 align=center style='text-align:center'>ARDT UC#7</h1>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h1>Design</h1>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>PlannedDisconnect Defense adheres to the ADRT UC#9
Deconfliction API.<span style="mso-spacerun: yes">  </span>As such, it
publishes the following Condition and OpMode objects for each managed asset (at
this point Nodes) for use by the Coordinator:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l3 level1 lfo2;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Condition: <u>Applicable </u>– TRUE/FALSE - the Defense
applicable to the Asset</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l3 level1 lfo2;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>OpMode: <u>Defense</u> – the Defense is ENABLED/DISABLED
from acting on the asset</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l3 level1 lfo2;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>OpMode: <u>Monitoring</u> – Monitoring is ENABLED/DISABLED
for the asset</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The Defense as currently packaged also includes the UC#9
Coordinator.<span style="mso-spacerun: yes">  </span>This will be separated out
in the future, but at present there is only one Defense (this one) that adheres
to the Deconfliction API and time constraints preclude the partitioning for this
release.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Internally, the Defense is structured to have an instance on
each Node in a Robustness Community and an instance in the Robustness
Community’s ManagementAgent.<span style="mso-spacerun: yes">   </span>The main
plugIn of a NodeAgent instance is: PlannedDisconnectNodePlugin. The main plugIn
of the ManagementAgent instance is: PlannedDisconnectManagerPlugin.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>A NodeAgent signals a UnscheduledDisconnect condition for
its Node.<span style="mso-spacerun: yes">  </span>Such conditions are currently
set through a servlet or by a plugIn that also sets a UnscheduledReconnectTime
condition telling when the Node is expected to reconnect.<span
style="mso-spacerun: yes">  </span>These conditions are transferred to the
ManagementAgent Defense instance by a RemoteDefenseConditionPluginMgr (part of
the org.cougaar.tools.robustness.deconfliction package).<span
style="mso-spacerun: yes">  </span>The ManagementAgent Defense instance can
(but currently does not) publish corresponding conditions for each Node called
ScheduledDisconnect and ScheduledReconnectTime.<span style="mso-spacerun:
yes">  </span>These are intended in the future to be set based on Node-specific
TechSpecs that define periodically scheduled Node disconnects (e.g., for h/w
maintenance).<span style="mso-spacerun: yes">  </span>In the future, is planned
that a NodeAgent will also manage all of the Agents on the Node as well as the
Node itself.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>All the previous Condition objects are processed in the
ManagementAgent Defense instance to set the Defense’s Applicable Condition for
the Asset. If either the ScheduledDisconnect condition or the
UnscheduledDisconnect condition are true for an Asset, the PlannedDisconnect
Defense is Applicable=TRUE. </p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The Applicable conditions for all Assets are available to
the Coordinator so that it can deconflict/sequence the various Defenses.<span
style="mso-spacerun: yes">  </span>Since there is only one Defense available to
the Coordinator at present, if PlannedDisconnect is Applicable to an Asset, the
Defense and Monitoring OpModes for that Asset are set to ENABLED; otherwise
they are set to DISABLED.<span style="mso-spacerun: yes">  </span>This happens
independently for all Assets visible to the PlannedDisconnect ManagementAgent
instance.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Once the Defense-level Defense and Monitoring OpModes are
set, the ManagementAgent Defense instance sees them and sets corresponding
OpModes for the NodeAgents and for the ManagementAgent itself.<span
style="mso-spacerun: yes">  </span>These are called respectively NodeDefense
&amp; NodeMonitoring and ManagerDefense &amp; ManagerMonitoring.<span
style="mso-spacerun: yes">  </span>These are then forwarded to the appropriate
places as OpModes.<span style="mso-spacerun: yes">  </span>The reason that
there are separate OpModes for the NodeAgents and the ManageemntAgent are
because different kinds of assets will have to be defended and monitored from
different places.<span style="mso-spacerun: yes">  </span>The reconnection of
an Agent that disconnects can be monitored from its NodeAgent, but the return
of a disconnected Node can only be monitored from off-Node (i.e., in the
ManagementAgent). </p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h1>Implementation</h1>

<p class=MsoNormal>The Defense is currently implemented using the Cougaar
Adaptivity Engine. The AE was not specifically designed for this use, but the
functionality it provides is similar enough that we felt it worth the effort to
attempt at least an initial implementation using the AE.<span
style="mso-spacerun: yes">  </span>AE was designed for very rapid setting of a fixed
collection of node-level operating modes based on a fixed collection of sensor
conditions.<span style="mso-spacerun: yes">  </span>Speed of reaction was a major
AE goal.<span style="mso-spacerun: yes">  </span>Because of this difference in intent
between the AE and our needs, the use of the AE imposes some requirements on
the shape of Conditions and OpModes and also on the way they are passed
around.<span style="mso-spacerun: yes">  </span>AE does not support
parameterization, so it is not possible to write a play that uses the
conditions on an arbitrary asset of some type to set the operating modes for
that asset.<span style="mso-spacerun: yes">  </span>Instead, a separate set of
rules is required for each asset.<span style="mso-spacerun: yes">  </span>A
consequence is that the Defense’s AE’s playbook contains rules like:</p>

<p class=MsoNormal style='margin-left:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:.5in'>(PlannedDisconnect.UnscheduledDisconnect.Node.NodeA
== TRUE)</p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>         </span>:
PlannedDisconnect.Applicable.Node.NodeA = TRUE;</p>

<p class=MsoNormal style='margin-left:.5in'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:.5in'>(PlannedDisconnect.UnscheduledDisconnect.Node.NodeB
== TRUE)</p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>         </span>:
PlannedDisconnect.Applicable.Node.NodeB = TRUE;</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Where NodeA and NodeB are the names of two Nodes.<span
style="mso-spacerun: yes">  </span>A consequence of this is that in this
implementation, the Community_playbook has to have static rules for every Node
that will be allwed to disconnect per the PlannedDisconnect Defense.<span
style="mso-spacerun: yes">  </span>This is an obvious place where improvement
is required, as it causes the playbook to be large and does not support the
dynamic addition of new nodes or agents. There has been some discussion of
whether it makes sense for Cougaar to provide parameters for AE plays; this
issue is not yet resolved.<span style="mso-spacerun: yes">  </span></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Another consequence of AE use that because AE requires play
predicates to be either Conditions that come from outside the playbook or
pseudo-OpModes that are defined within the playbook and used like variables in
subsequent plays, it is not possible to have an externally visible OpMode that
is set by the AE be directly used as a predicate in another play.<span
style="mso-spacerun: yes">  </span>Because we use AE to combine conditions from
NodeAgents and the ManagementAgent to set the Defense Applicable condition, a
second time as part of the Coordinator functionality to set Defense and
Monitoring OpModes for the PlannedDisconnect Defense, and a third time to turn
those values into OpModes specific to the NodeAgent and ManagementAgent
instances of the Defense, we need to have something set by the AE (an OpMode)
function later as a Condition.<span style="mso-spacerun: yes">  </span>To do
this, we implemented a “transfer function” that transfers the values of OpModes
into Conditions with corresponding names.<span style="mso-spacerun: yes"> 
</span>This is done by a subscription that looks for the OpModes and then
publishChange() the value to the condition.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Because of the lack of parameterization, all such
information must be encoded in the names of conditions and OpModes.<span
style="mso-spacerun: yes">  </span>We chose the following (dotted concatenation)
syntax for Condition and OpMode names:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l2 level1 lfo4;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Defense Name (e.g. PlannedDisconnect)</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l2 level1 lfo4;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Condition or OpMode Name (e.g., ScheduledReconnectTime)</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l2 level1 lfo4;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Asset Type (e.g., Node)</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l2 level1 lfo4;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Asset Name (e.g., NodeA)</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Further, when a Condition or OpMode applies at the Node, ManagementAgent,
or Defense level, its Name is prefixed with “Node”, “Manager”, or “”.<span
style="mso-spacerun: yes">  </span><span style="mso-spacerun: yes">  </span>[The
difference between a condition that applies to the ManagementAgent and one that
applies to the Defense as a whole is that the former is something determined by
or at the ManagementAgent itself and the letter is something determined at or by
the ManagementAgent after also considering NodeAgent level conditions.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<h1>Installation &amp; Use</h1>

<p class=MsoNormal>The Defense resides in the package org.cougaar.tools.robustness.disconnect.<span
style="mso-spacerun: yes">  </span></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>ManagementAgent.ini and NodeAgent.ini files are provided.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>Because of the use of AE, the “CommunityLevel_playbook” must
contain rules for every node that can perform a<span style="mso-spacerun:
yes">  </span>planned disconnect.<span style="mso-spacerun: yes">  </span>The rules
for each will be identical except for the Asset Name (see syntax above).<span
style="mso-spacerun: yes">  </span>Further, because AE throws exceptions if it
has plays for which no conditions exist, all condition and opMode objects must exist
in advance.<span style="mso-spacerun: yes">  </span>These restrictions will be removed
in the future.<span style="mso-spacerun: yes">  </span>At present, the ManagementAgent
is parameterized on load with the names of all managed Nodes (e.g., the .ini contains:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l1 level1 lfo5;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>plugin =
org.cougaar.tools.robustness.disconnection.PlannedDisconnectManagerPlugin(NodeA,
NodeB)</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>AE playbooks are required for both the NodeAgents and the ManagementAgent.<span
style="mso-spacerun: yes">  </span></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The ManagementAgent playbook is called CommunityLevel_playbook.txt
and contains:</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l1 level1 lfo5;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>plays to merge Node Agent and ManagementAgent conditions
to create Defense-level conditions (via the transfer OpModes discussed earlier),
</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l1 level1 lfo5;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>plays for the Coordinator (eventually to be partitioned
off)</p>

<p class=MsoNormal style='margin-left:.25in;text-indent:-.25in;mso-list:l1 level1 lfo5;
tab-stops:list .25in'><![if !supportLists]><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]>plays to translate Defense-level OpModes into corresponding
OpModes for the ManagementAgent &amp; the NodeAgents.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal>The NodeAgent requires a NULL_playbook.txt containing no
plays.<span style="mso-spacerun: yes">  </span>This is necessary in order to allow
the AE at the ManagementAgent side to set OpModes at the Nodes.</p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

<p class=MsoNormal><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></p>

</div>

</body>

</html>
