/*
 * DiagnosisTechSpec.java
 *
 * Created on July 9, 2003, 9:24 AM
 * <copyright>
 *  Copyright 2003 Object Services and Consulting, Inc.
 *  under sponsorship of the Defense Advanced Research Projects Agency (DARPA)
 *  and the Defense Logistics Agency (DLA).
 * 
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the Cougaar Open Source License as published by
 *  DARPA on the Cougaar Open Source Website (www.cougaar.org).
 * 
 *  THE COUGAAR SOFTWARE AND ANY DERIVATIVE SUPPLIED BY LICENSOR IS
 *  PROVIDED 'AS IS' WITHOUT WARRANTIES OF ANY KIND, WHETHER EXPRESS OR
 *  IMPLIED, INCLUDING (BUT NOT LIMITED TO) ALL IMPLIED WARRANTIES OF
 *  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, AND WITHOUT
 *  ANY WARRANTIES AS TO NON-INFRINGEMENT.  IN NO EVENT SHALL COPYRIGHT
 *  HOLDER BE LIABLE FOR ANY DIRECT, SPECIAL, INDIRECT OR CONSEQUENTIAL
 *  DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE OF DATA OR PROFITS,
 *  TORTIOUS CONDUCT, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 *  PERFORMANCE OF THE COUGAAR SOFTWARE.
 * </copyright>
 */

package org.cougaar.coordinator.techspec;

import java.util.Vector;
import java.util.Set;
import org.cougaar.core.util.UID;


/**
 *
 * @author  Paul Pazandak, Ph.D. OBJS, Inc.
 */
public interface DiagnosisTechSpecInterface extends TechSpecRootInterface {

    /** @return a user-readable name for this TechSpec
     *
     */
    public String getName();
    
    
    /** @return a revision string for this TechSpec
     *
     */
    public String getRevision();
    
    
    /** @return a unique cougaar level name for this TechSpec
     *
     */
    public UID getUID();

  
    /** @return the State Dimension that the sensor is watching.
     */
    public AssetStateDimension getStateDimension();

    /** @return the latency -- the time it takes this sensor to diagnose/notice & report a problem, in milliseconds.
     */
    public int getLatency();    
    
    /** @return the vector of monitoring levels that this sensor supports
     *
     */
//    public void addMonitoringLevel() {
//        levels.add(null);
//    }
    
    /** @return the possible values that Diagnoses generated by this Sensor can return via getValue()
     */
    public void addPossibleValue(String v);
    
    /** @return a revision string for this TechSpec
     *
     */
    public void setRevision(String r);
    
    /** @return the ThreatTypes associated with this Defense
     */
//    public void addThreatType() {
//        threatTypes.add(null);
//    }
    
    /**
     * @return the DiagnosisProbabilities
     *
     */
    public Vector getDiagnosisProbabilities();


    /**
     * @return the CrossDiagnosisProbabilities
     *
     */
    public Vector getCrossDiagnosisProbabilities();
    
    /**
     * add a CrossDiagnosisProbability
     *
     */
    public void addCrossDiagnosisProbability(CrossDiagnosis cd);
    

    
    
    /**
     * Add a DiagnosisProbability
     *
     */
    public void addDiagnosisProbability(DiagnosisProbability dp);
    
    
    /**
     * @return the possible values that Diagnoses generated by this Sensor can return via getValue()
     */
    public Set getPossibleValues();
    
    /**
     * @return the asset type that the threat cares about.
     */
    public AssetType getAssetType();
    
    /**
     * @return the vector of monitoring levels that this sensor supports
     *
     */
    public Vector getMonitoringLevels();
    
     /**
      * @return the ThreatTypes associated with this Defense
      */
     public Vector getThreatTypes();
   

}
