/*
 * ActionTechSpecInterface.java
 *
 * Created on July 9, 2003, 9:24 AM
 * 
 * <copyright>
 * 
 *  Copyright 2003-2004 Object Services and Consulting, Inc.
 *  under sponsorship of the Defense Advanced Research Projects
 *  Agency (DARPA).
 *
 *  You can redistribute this software and/or modify it under the
 *  terms of the Cougaar Open Source License as published on the
 *  Cougaar Open Source Website (www.cougaar.org).
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * </copyright>
 */

package org.cougaar.coordinator.techspec;
import org.cougaar.coordinator.Action;
import java.util.Vector;
import java.util.Set;

/**
 *
 * @author  Paul Pazandak, Ph.D. OBJS, Inc.
 */
public interface ActionTechSpecInterface extends TechSpecRootInterface {

    public static final int CORRECTIVE_ACTIONTYPE=1;
    public static final int PREVENTIVE_ACTIONTYPE=2;
    public static final int APPLICATION_ACTIONTYPE=3;
    public static final int COMPENSATORY_ACTIONTYPE=4;
    
    /**
     * @return  the possible values that Actions generated by this Actuator can return via getValue()
     */
    public Set getPossibleValues();
    
    /**
     * @return the asset type that the actuator cares about.
     */
    public AssetType getAssetType();
    
    /**
     * @return the state dimension that the actuator affects if an action is taken.
     */
    public AssetStateDimension getStateDimension();
    
    /**
     * @return an action description for the specified actionValue taken
     * from the actionRecord.getValue(), which was generated initially from getValueFromXML(). 
     * The tech spec does not know what this conversion is since it didn't have a handle to an Action
     * at start up.
     */
    public ActionDescription getActionDescriptionForValue(Action a, Object actionValue) ;

    /**
     * @return the ActionDescriptions for this Actuator
     */
    public Vector getActions();

    /**
     * Add an action
     */
    public void addAction(ActionDescription ad);

    /**
     * Get the type of the action
     */
    public int getActionType();
    
    
}
