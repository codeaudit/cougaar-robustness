/*
 * TestActionTechSpec.java
 *
 * Created on March 4, 2004, 2:17 PM
 *
 * <copyright>
 * 
 *  Copyright 2004 Object Services and Consulting, Inc.
 *  under sponsorship of the Defense Advanced Research Projects
 *  Agency (DARPA).
 *
 *  You can redistribute this software and/or modify it under the
 *  terms of the Cougaar Open Source License as published on the
 *  Cougaar Open Source Website (www.cougaar.org).
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * </copyright>
 */


package org.cougaar.coordinator.test.coordination;
import org.cougaar.coordinator.techspec.*;  
import org.cougaar.coordinator.*;  
import org.cougaar.core.util.UID;

import java.util.Set;
import java.util.HashSet;
import java.util.Vector;

/**
 *
 * @author  Administrator
 */
public class TestActionTechSpec implements ActionTechSpecInterface {
    
    HashSet pvs;
    
    /** Creates a new instance of TestActionTechSpec */
    public TestActionTechSpec() {
        pvs = new HashSet();
        pvs.add("NoEncryption");
        pvs.add("64Encryption");
        pvs.add("128Encryption");
        pvs.add("256Encryption");
    }
    
    /** @return the asset type that the threat cares about.
     */
    public AssetType getAssetType() {
        return AssetType.findAssetType("AGENT");
    }
    
    /** @return a user-readable name for this TechSpec
     *
     */
    public String getName() {
        return "MyTestActionTechSpec";
    }
    
    /** @return the possible values that Actions generated by this Actuator can return via getValue()
     */
    public Set getPossibleValues() {
        
        return pvs;
    }
    
    /** @return a revision string for this TechSpec
     *
     */
    public String getRevision() {
        return "0.1";
    }
    
    /** @return a unique cougaar level name for this TechSpec
     *
     */
    public UID getUID() {
        return null;
    }
    
    /**
     * @return an action description for the specified actionValue taken
     * from the actionRecord.getValue(), which was generated initially from getValueFromXML(). 
     * The tech spec does not know what this conversion is since it didn't have a handle to an Action
     * at start up.
     */
    public ActionDescription getActionDescriptionForValue(Action a, Object actionValue) { 
        return null;
    }
    
    /** @return the ActionDescriptions for this Actuator
     */
    public void addAction(ActionDescription ad) {
    }
    
    /** @return the state dimension that the actuator cares about.
     */
    public AssetStateDimension getStateDimension() {
        return null;
    }
    
    /**
     * Get the type of the action
     */
    public int getActionType() { return ActionTechSpecInterface.CORRECTIVE_ACTIONTYPE; }
    
    /** @return the actions for this actuator. This class returns NULL. */
    public Vector getActions() { return null; }
    
}
