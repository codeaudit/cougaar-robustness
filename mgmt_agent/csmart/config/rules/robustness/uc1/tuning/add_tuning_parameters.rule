# Add node-specific tuning parameters to robustness community
require 'rexml/document'

society.communities.each do |community|
  isRobustness = "false"
  community.each_attribute do |id, value|
    if id == "CommunityType" && value == "Robustness"
      isRobustness = "true"
      break
    else
      isRobustness = "false"
      break
    end
  end

  #only add statics information to robustness community
  if isRobustness == "false"
    next
  end

  #get the stats file of this community
  filename = "#{CIP}/workspace/nodestats/" + community.name + ".nodestats"

  if !File.exists?(filename)
    xml ||= []
    xml << "<NodeLatencyStatistics>"
    community.each do |entity|
      if entity.entity_type == "Node"
        xml << "  <Item community='#{community.name}' node='#{entity.name}' samples='1' sum='300000' sumSquares='90000000000' low='300000' high='300000' mean='300000' stdev='60000' />"
      end
    end
    xml << "</NodeLatencyStatistics>"
    xml.join("\n")
    begin
      File.open(filename, "w") { |myfile| myfile.puts xml }
    rescue
      puts "Could not write node stats to #{filename}"
    end
  end

  begin
    file = File.new(filename)
  rescue Exception #catch file not exist exception
    puts "didn't find file #{filename}"
    break
  end
  doc = REXML::Document.new(file)

  mean = 0
  stddev = 0
  high = 0
  doc.elements.each("NodeLatencyStatistics/Item") do |element|
    parent_community = element.attributes['community']
    if parent_community == community.name
      name = element.attributes['node']
      node_mean = element.attributes['mean'].to_i
      node_stdev = element.attributes['stdev'].to_i
      node_high = element.attributes['high'].to_i
      if node_high > high
        high = node_high
        mean = node_mean
	stddev = node_stdev
      end
      community.each do |entity|
        if entity.name == name
          entity.add_attribute("STATUS_LATENCY_MEAN", node_mean)
          entity.add_attribute("STATUS_LATENCY_STDDEV", node_stdev)
	end
      end
    end # ends if parent_community == community.name
  end # ends doc.elements.each("NodeLatencyStatistics/Item") do |element|
  if mean > 0
    community.remove_attribute("DEFAULT_STATUS_LATENCY_MEAN")
    community.add_attribute("DEFAULT_STATUS_LATENCY_MEAN", mean)
    community.remove_attribute("DEFAULT_STATUS_LATENCY_STDDEV")
    community.add_attribute("DEFAULT_STATUS_LATENCY_STDDEV", stddev)
  end
end # ends society.communities.each do |community|
