require 'cougaar/communities'
require 'ultralog/enclaves'

default_expiration =        "180000"
initial_expiration =        "180000"
located_expiration =        "120000"
active_expiration =         "120000"
health_check_expiration =   "240000"
dead_expiration =            "30000"
restart_expiration =        "300000"
failed_restart_expiration =  "30000"
move_expiration =           "300000"
ping_timeout =              "120000"
heartbeat_request_timeout =  "60000"
heartbeat_frequency =        "60000"
heartbeat_timeout =          "90000"
heartbeat_pct_out_of_spec =     "80"

society.each_enclave do |enclave|
  society.communities.add("1AD-#{enclave}-COMM") do |community|
    community.add_attribute("CommunityType", "Robustness")
    community.add_attribute("CommunityManager", "1AD-#{enclave}-ARManager")
    community.add_attribute("RobustnessManager", "1AD-#{enclave}-ARManager")
    community.add_attribute("UNDEFINED_EXPIRATION", default_expiration)
    community.add_attribute("INITIAL_EXPIRATION", initial_expiration)
    community.add_attribute("LOCATED_EXPIRATION", located_expiration)
    community.add_attribute("ACTIVE_EXPIRATION", active_expiration)
    community.add_attribute("HEALTH_CHECK_EXPIRATION", health_check_expiration)
    community.add_attribute("DEAD_EXPIRATION", dead_expiration)
    community.add_attribute("RESTART_EXPIRATION", restart_expiration)
    community.add_attribute("FAILED_RESTART_EXPIRATION", "failed_restart_expiration")
    community.add_attribute("MOVE_EXPIRATION", move_expiration)
    community.add_attribute("PING_TIMEOUT", ping_timeout)
    community.add_attribute("HEARTBEAT_REQUEST_TIMEOUT", heartbeat_request_timeout)
    community.add_attribute("HEARTBEAT_FREQUENCY", heartbeat_frequency)
    community.add_attribute("HEARTBEAT_TIMEOUT", heartbeat_timeout)
    community.add_attribute("HEARTBEAT_PCT_OUT_OF_SPEC", heartbeat_pct_out_of_spec)

    #community.add_agent("1AD-#{enclave}-ARManager") do |entity|
      #entity.add_role("Member")
      #entity.add_role("HealthMonitor")
      #entity.add_role("RobustnessManager")
    #end
    num_agents = 0
    society.each_enclave_node(enclave) do |node|
      unless node.has_facet?(:role)
        community.add_node(node.name) do |entity|
          entity.add_role("Member")
	  entity.add_role("HealthMonitor")
        end
        node.each_agent do |agent|
          num_agents += 1
          community.add_agent(agent.name) do |entity|
            entity.add_role("Member")
	    if agent.name =~ /.*ARManager.*/
	      entity.add_role("HealthMonitor")
              entity.add_role("RobustnessManager")
	    end
          end
        end
      end
    end
    community.add_attribute("NumberOfAgents", num_agents.to_s)
  end
end

