require 'cougaar/communities'
require 'ultralog/enclaves'

INITIAL_EXPIRATION =        "180000"
LOCATED_EXPIRATION =        "120000"
ACTIVE_EXPIRATION =         "120000"
HEALTH_CHECK_EXPIRATION =   "240000"
DEAD_EXPIRATION =            "30000"
RESTART_EXPIRATION =        "300000"
FAILED_RESTART_EXPIRATION =  "30000"
MOVE_EXPIRATION =           "300000"
PING_TIMEOUT =              "120000"
HEARTBEAT_REQUEST_TIMEOUT =  "60000"
HEARTBEAT_FREQUENCY =        "60000"
HEARTBEAT_TIMEOUT =          "90000"
HEARTBEAT_PCT_OUT_OF_SPEC =     "80"

society.each_enclave do |enclave|
  society.communities.add("1AD-#{enclave}-COMM") do |community|
    community.add_attribute("CommunityType", "Robustness")
    community.add_attribute("CommunityManager", "1AD-#{enclave}-ARManager")
    community.add_attribute("RobustnessManager", "1AD-#{enclave}-ARManager")
    community.add_attribute("UNDEFINED_EXPIRATION", timeout)
    community.add_attribute("INITIAL_EXPIRATION", INITIAL_EXPIRATION)
    community.add_attribute("ACTIVE_EXPIRATION", ACTIVE_EXPIRATION)
    community.add_attribute("HEALTH_CHECK_EXPIRATION", HEALTH_CHECK_EXPIRATION)
    community.add_attribute("DEAD_EXPIRATION", DEAD_EXPIRATION)
    community.add_attribute("RESTART_EXPIRATION", RESTART_EXPIRATION)
    community.add_attribute("FAILED_RESTART_EXPIRATION", "FAILED_RESTART_EXPIRATION")
    community.add_attribute("MOVE_EXPIRATION", MOVE_EXPIRATION)
    community.add_attribute("PING_TIMEOUT", PING_TIMEOUT)
    community.add_attribute("HEARTBEAT_REQUEST_TIMEOUT", HEARTBEAT_REQUEST_TIMEOUT)
    community.add_attribute("HEARTBEAT_FREQUENCY", HEARTBEAT_FREQUENCY)
    community.add_attribute("HEARTBEAT_TIMEOUT", HEARTBEAT_TIMEOUT)
    community.add_attribute("HEARTBEAT_PCT_OUT_OF_SPEC", HEARTBEAT_PCT_OUT_OF_SPEC)

    #community.add_agent("1AD-#{enclave}-ARManager") do |entity|
      #entity.add_role("Member")
      #entity.add_role("HealthMonitor")
      #entity.add_role("RobustnessManager")
    #end
    num_agents = 0
    society.each_enclave_node(enclave) do |node|
      unless node.has_facet?(:role)
        community.add_node(node.name) do |entity|
          entity.add_role("Member")
	  entity.add_role("HealthMonitor")
        end
        node.each_agent do |agent|
          num_agents += 1
          community.add_agent(agent.name) do |entity|
            entity.add_role("Member")
	    if agent.name =~ /.*ARManager.*/
	      entity.add_role("HealthMonitor")
              entity.add_role("RobustnessManager")
	    end
          end
        end
      end
    end
    community.add_attribute("NumberOfAgents", num_agents.to_s)
  end
end

