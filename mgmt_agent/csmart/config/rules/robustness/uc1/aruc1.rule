####################################################
# Rule to insert components required for
# Adaptive Robustness Use-Case 1(ARUC1) defense

#
# OBJS Sensor components
#
sensor_domain              = "org.cougaar.tools.robustness.sensors.SensorDomain"
ping_server_plugin         = "org.cougaar.tools.robustness.sensors.PingServerPlugin"
hb_server_plugin           = "org.cougaar.tools.robustness.sensors.HeartbeatServerPlugin"
hb_requester_plugin        = "org.cougaar.tools.robustness.sensors.HeartbeatRequesterPlugin"
ping_requester_plugin      = "org.cougaar.tools.robustness.sensors.PingRequesterPlugin"

#
# MIC UC1 components
#
ar_servlet                 = "org.cougaar.tools.robustness.ma.ui.ARServlet"
node_health_monitor_plugin = "org.cougaar.tools.robustness.ma.plugins.NodeHealthMonitorPlugin"

#
# Ex Nihilo Plugin (Load balancer) 
#
load_balancer_plugin      = "com.boeing.pw.mct.exnihilo.plugin.EN4JPlugin"

#
# Infrastructure components
#
wp_servlet                 = "org.cougaar.core.wp.WhitePagesServlet"
node_mobility_plugin       = "org.cougaar.core.mobility.service.RootMobilityPlugin"
agent_mobility_plugin      = "org.cougaar.core.mobility.service.RedirectMovePlugin"
communityPlugin            = "org.cougaar.community.CommunityPlugin"
communityViewerServlet     = "org.cougaar.community.util.CommunityViewerServlet"

# Add components to all Agents
society.each_agent do |agent|
  agent.add_component do |c|
    c.name = agent.name + "|" + sensor_domain
    c.classname = sensor_domain
    c.priority = "COMPONENT"
    c.insertionpoint = "Node.AgentManager.Agent.DomainManager.Domain"
    c.add_argument("sensors")
  end
  agent.add_component do |c|
    c.classname = communityViewerServlet
  end
  agent.add_component do |c|
    c.classname = ping_server_plugin
  end
  agent.add_component do |c|
    c.classname = hb_server_plugin
  end
  agent.add_component do |c|
    c.classname = agent_mobility_plugin
  end
end

# Add components to Nodes
society.each_node_agent do |node_agent|
  node_agent.add_component do |c|
    c.name = node_agent.name + "|" + sensor_domain
    c.classname = sensor_domain
    c.priority = "COMPONENT"
    c.insertionpoint = "Node.AgentManager.Agent.DomainManager.Domain"
    c.add_argument("sensors")
  end
  node_agent.add_component do |c|
    c.classname = node_health_monitor_plugin
  end
  node_agent.add_component do |c|
    c.classname = ar_servlet
  end
  node_agent.add_component do |c|
    c.classname = hb_requester_plugin
  end
  node_agent.add_component do |c|
    c.classname = ping_requester_plugin
  end
  node_agent.add_component do |c|
    c.classname = communityPlugin
  end
  node_agent.add_component do |c|
    c.classname = communityViewerServlet
  end
  #node_agent.add_component do |c|
    #c.classname = wp_servlet
    #c.add_argument("/wp")
  #end
  node_agent.add_component do |c|
    c.classname = ping_server_plugin
  end
  node_agent.add_component do |c|
    c.classname = hb_server_plugin
  end
  node_agent.add_component do |c|
    c.classname = node_mobility_plugin
  end
  node_agent.add_component do |c|
    c.classname = load_balancer_plugin
  end
end

# Add VM parameters to nodes
society.each_node do |node|
  node.classname = "org.cougaar.bootstrap.Bootstrapper"
  prog_parameter = "org.cougaar.core.node.Node"
  flag = "false"
  node.each_prog_parameter do |prog|
    flag = "true" if prog == prog_parameter
  end
  node.add_prog_parameter(prog_parameter) if flag == "false"
  node.override_parameter("-Dorg.cougaar.core.node.XML", "true")
  node.override_parameter("-Dorg.cougaar.node.name", node.name)
  node.override_parameter("-Dorg.cougaar.core.logging.config.filename","file:$COUGAAR_INSTALL_PATH/robustness/configs/loggingConfig.conf")
  node.override_parameter("-Dorg.cougaar.core.logging.log4j.appender.SECURITY.File","$COUGAAR_INSTALL_PATH/workspace/log4jlogs/$HOSTNAME.log")
  node.override_parameter("-Dorg.cougaar.core.agent.startTime", "08/10/2005")
  #node.override_parameter("-Dorg.cougaar.core.persistence.clear", "true")
  node.override_parameter("-Dorg.cougaar.core.persistence.enable", "true")
  node.override_parameter("-Dorg.cougaar.core.persistence.lazyInterval", "120000")
  node.override_parameter("-Dorg.cougaar.name.server", "localhost:8888:5555")
  node.override_parameter("-Dorg.cougaar.planning.ldm.lps.ComplainingLP.level", "0")
  node.override_parameter("-Duser.timezone", "GMT")
  node.override_parameter("-Dorg.cougaar.core.node.InitializationComponent", "XML")
  node.override_parameter("-Dorg.cougaar.core.agent.heartbeat", "false")
  node.override_parameter("-Dorg.cougaar.core.agent.showTraffic", "false")
  node.override_parameter("-Dorg.cougaar.tools.robustness.community", "TINY-1AD-ROBUSTNESS-COMM")

  # To run most societies, you need configs/common and configs/glmtrans
  # on the path.
  node.override_parameter("-Dorg.cougaar.config.path","$COUGAAR_INSTALL_PATH/robustness/configs\\\;$COUGAAR_INSTALL_PATH/configs/common\\\;$COUGAAR_INSTALL_PATH/configs/glmtrans\\\;")

  # ACME Service will replace $COUGAAR_INSTALL_PATH with platform  specific path
  node.override_parameter("-Dorg.cougaar.install.path","$COUGAAR_INSTALL_PATH")
  node.override_parameter("-Dorg.cougaar.workspace","$COUGAAR_INSTALL_PATH/workspace")
  node.override_parameter("-Dorg.cougaar.system.path","$COUGAAR_INSTALL_PATH/sys")
  node.override_parameter("-Djava.class.path","$COUGAAR_INSTALL_PATH/lib/bootstrap.jar")
  node.replace_parameter(/\-Xbootclasspath/, "-Xbootclasspath/p:$COUGAAR_INSTALL_PATH/lib/javaiopatch.jar")

  #Java Virtual Machine Parameters
  node.replace_parameter(/\-Xms/, "-Xms100m")
  node.replace_parameter(/\-Xmx/, "-Xmx300m")
  node.replace_parameter(/\-XX\:ThreadStackSize/, "-XX:ThreadStackSize=256")

  node.each_agent do |agent|
    agent.remove_component("org.cougaar.core.topology.TopologyReaderServlet")
    agent.each_component do |comp|
      if comp.classname == "org.cougaar.mlm.plugin.ldm.LDMSQLPlugin"
        comp.arguments[0].value = "fdm_equip_ref.q"
      end
      if comp.classname == "org.cougaar.mlm.plugin.organization.GLSInitServlet"
        comp.arguments[0].value = "093FF.oplan.noncsmart.q"
      end
    end
  end

end

