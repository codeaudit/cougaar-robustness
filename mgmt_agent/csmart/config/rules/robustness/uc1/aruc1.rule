####################################################
# Rule to insert components required for
# Adaptive Robustness Use-Case 1(ARUC1) defense
####################################################

# OBJS Sensor components
sensor_domain       = "org.cougaar.tools.robustness.sensors.SensorDomain"
ping_server         = "org.cougaar.tools.robustness.sensors.PingServerPlugin"
hb_server           = "org.cougaar.tools.robustness.sensors.HeartbeatServerPlugin"
hb_requester        = "org.cougaar.tools.robustness.sensors.HeartbeatRequesterPlugin"
ping_requester      = "org.cougaar.tools.robustness.sensors.PingRequesterPlugin"

# OBJS Deconfliction components
omsp                = "org.cougaar.core.adaptivity.OperatingModeServiceProvider"
ompm                = "org.cougaar.core.adaptivity.OperatingModePolicyManager"
csp                 = "org.cougaar.core.adaptivity.ConditionServiceProvider"
co                  = "org.cougaar.tools.robustness.deconfliction.CoordinatorPlugin"

# MIC UC1 components
ar_servlet          = "org.cougaar.tools.robustness.ma.ui.ARServlet"
node_health_monitor = "org.cougaar.tools.robustness.ma.plugins.NodeHealthMonitorPlugin"

# Boeing components
load_balancer  	    ="org.cougaar.robustness.exnihilo.plugin.EN4JPlugin"

managerPluginsToAdd = [hb_requester, ping_requester, node_health_monitor, ar_servlet, load_balancer, omsp, ompm, csp, co]
agentPluginsToAdd   = [hb_server, ping_server]
nodePluginsToAdd    = [hb_requester, ping_requester, ping_server, node_health_monitor, ar_servlet]

# Add components to all Agents
society.each_agent do |agent|
  agent.add_component do |c|
    c.name = agent.name + "|" + sensor_domain
    c.classname = sensor_domain
    c.priority = "COMPONENT"
    c.insertionpoint = "Node.AgentManager.Agent.DomainManager.Domain"
    c.add_argument("sensors")
  end
  agent.add_components(agentPluginsToAdd)
  # Add components to robustness manager agents
  if agent.name =~ /.*ARManager.*/
    agent.add_components(managerPluginsToAdd)
  end
end

# Add components to Nodes
society.each_node_agent do |node_agent|
  node_agent.add_component do |c|
    c.name = node_agent.name + "|" + sensor_domain
    c.classname = sensor_domain
    c.priority = "COMPONENT"
    c.insertionpoint = "Node.AgentManager.Agent.DomainManager.Domain"
    c.add_argument("sensors")
  end
  node_agent.add_components(nodePluginsToAdd)
end

society.each_node do |node|
  node.override_parameter("-Dorg.cougaar.robustness.exnihilo.plugin.COLLECT_MESSAGE_TRAFFIC", "false")
end
