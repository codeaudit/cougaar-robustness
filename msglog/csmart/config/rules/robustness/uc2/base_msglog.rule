#############################
# Add basic MsgLog to society
#
# Warning: Aspects have order dependencies as encoded below by order numbers.
#          The authoritative source for the order numbers is 
#          https://cvs.ultralog.net/ultralog/AspectConfiguration.  
#          Changes made there must be propagated here.  
#
# Warning: org.cougaar.core.mts.LoopbackLinkProtocol should be loaded 
#          before all other protocols.       
#
# Warning: If deconfliction.rule is applied, it must be applied BEFORE this rule
#

policy = "org.cougaar.core.mts.AdaptiveLinkSelectionPolicy"

# this one will eventually be built in
mta  = [ 10, "org.cougaar.core.mts.MessageTimeoutAspect"]

rsca = [325, "org.cougaar.core.mts.RMISocketControlAspect"]
sta  = [330, "org.cougaar.core.mts.ShowTrafficAspect"]
sa   = [140, "org.cougaar.core.mts.StatisticsAspect"]
rsta = [335, "org.cougaar.core.mts.RMISendTimeoutAspect"]
msha = [340, "org.cougaar.core.mts.MessageSendHistoryAspect"]
maa  = [350, "org.cougaar.core.mts.acking.MessageAckingAspect"]
rtta = [360, "org.cougaar.core.mts.RTTAspect"]
mna  = [370, "org.cougaar.core.mts.MessageNumberingAspect"]
moa  = [380, "org.cougaar.core.mts.MessageOrderingAspect"]

# not sure about this aspect's position or necessity
nsta = "org.cougaar.core.mts.NameSupportTimeoutAspect" 

aspects = [mta, rsca, sta, sa, rsta, msha, maa, rtta, mna, moa]

loopback = "org.cougaar.core.mts.LoopbackLinkProtocol"
rmi      = "org.cougaar.core.mts.RMILinkProtocol"

protocols = [loopback, rmi]

society.each_node_agent do |node_agent|

    #aspects.each { |aspect| 
    #    node_agent.add_component do |c|
    #        c.classname = aspect
    #        c.insertionpoint = "Node.AgentManager.Agent.MessageTransport.Aspect"
    #    end
    #}

    aspects.each { |aspect| 
        node_agent.add_component do |c|
            c.order = aspect[0]
            c.classname = aspect[1]
            c.insertionpoint = "Node.AgentManager.Agent.MessageTransport.Aspect"
        end
    }

    node_agent.add_component do |c|
        c.classname = policy
        c.insertionpoint = "Node.AgentManager.Agent.MessageTransport.Component"
    end

    protocols.each { |protocol|
        node_agent.add_component do |c|
            c.classname = protocol
            c.insertionpoint = "Node.AgentManager.Agent.MessageTransport.Component"
        end
    }

end

society.each_node do |node|
    
    node.override_parameter("-Dorg.cougaar.core.wp.server.expireTTD", 1200000)          #default=240000
    #node.override_parameter("-Dorg.cougaar.core.wp.resolver.lease.renewRation", 0.75)  #default=0.75
    node.override_parameter("-Dorg.cougaar.core.wp.server.successTTD", 450000)          #default=90000
    node.override_parameter("-Dorg.cougaar.core.wp.server.failTTD", 150000)             #default=30000

    node.override_parameter("-Dorg.cougaar.message.transport.aspects.RMISendTimeoutAspect.connectTimeout", "60000")
    node.override_parameter("-Dorg.cougaar.message.transport.aspects.RMISendTimeoutAspect.readTimeout", "60000")
    node.override_parameter("-Dorg.cougaar.message.transport.aspects.RMISendTimeoutAspect.writeTimeout", "60000")

    node.override_parameter("-Dorg.cougaar.message.transport.aspects.acking.resendMultiplier", 6)

    # I don't think this is needed anymore, but I'm keeping it just in case.
    # need this for disconnected nodes
    #node.override_parameter("-Dorg.cougaar.tools.server.swallowOutputConnectionException", "true")

end




