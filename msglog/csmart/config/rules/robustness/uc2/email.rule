###################################################
# Adds Email support to nodes in different enclaves
# 
# Warning: This rule, if applied, should be AFTER base_msglog.rule
#
# Warning: This rule has laydown-specific info in it.
#
#          Change the range of mailusers on different societies (e.g. socA, socB, socC).
#          At present, there are 45 users defined on each of the five mail servers
#          and less than 15 nodes per enclave.  I normally assign users 1-15 to socA,
#          16-30 to socB, and 31-45 to socC.  If more nodes are added, more users will
#          have to be defined, and these ranges will have to change.
#
#          This is set up for use on socVA, assuming a maximum of 22 nodes per enclave. 
#          Change range for other societies.
#

mailusers = (1..22).to_a

mailhosts = []
society.each_host do |host|
    host.each_facet(:service) do |facet|
        if (facet[:service]=='smtp' || facet[:service]=='SMTP')
            mailhosts << host.name 
        end
    end
end

emailOut = "org.cougaar.mts.std.email.OutgoingEmailLinkProtocol"
emailIn  = "org.cougaar.mts.std.email.IncomingEmailLinkProtocol"

protocols = [emailOut, emailIn]

society.each_node_agent do |node|
    protocols.each { |protocol|
        node.add_component do |c|
            c.classname = protocol
            c.insertionpoint = "Node.AgentManager.Agent.MessageTransport.Component"
        end
    }
end

i = 0
k = 0
society.each_enclave do |enclave|
    j = 0
    society.each_enclave_node(enclave) do |node|

      node.override_parameter("-Dorg.cougaar.message.protocol.email.inboxes." + node.name,
                              "pop3://node" + (mailusers[j]+k).to_s + ":passwd@" + mailhosts[i] + ":110")

      node.override_parameter("-Dorg.cougaar.message.protocol.email.outboxes." + node.name, 
                              "smtp://node" + (mailusers[j]+k).to_s + ":passwd@" + mailhosts[i] + ":25")
    
      # to avoid security exception when it tries to read .mailcap
      node.override_parameter("-Duser.home","/home/asmt/") 

    # msglog tuning 

      node.override_parameter("-Dorg.cougaar.message.protocol.email.cost", "30000")                     # 30 secs
      node.override_parameter("-Dorg.cougaar.message.protocol.email.incoming.socketTimeout", "30000")   # 30 secs
      node.override_parameter("-Dorg.cougaar.message.protocol.email.outgoing.socketTimeout", "30000")   # 30 secs
      node.override_parameter("-Dorg.cougaar.message.protocol.email.outgoing.maxMessageSizeKB", "1000") # 1MB

      j = j + 1
    end
    i = i + 1
    if i >= mailhosts.length
      k = k + mailusers[mailusers.length - 1]
      i = 0
    end
end



